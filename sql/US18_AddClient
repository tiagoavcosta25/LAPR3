
create or replace procedure addClient(p_name Client.name%type, p_nif Client.nif%type, p_credits Client.credits%type,
p_latitude Address.latitude%type, p_longitude Address.longitude%type,
p_streetName Address.streetName%type, p_doorNumber Address.doorNumber%type, p_postalCode Address.postalCode%type, p_locality Address.locality%type,
p_country Address.country%type, p_creditCardNr CreditCard.creditCardNr%type,  p_validityDate CreditCard.validityDate%type, p_ccv CreditCard.CCV%type,
email "User".email%type, p_password "User".password%type)
is
    curs sys_refcursor;
    bonus_valor number;
    mes_invalido exception;
    ano_invalido exception;
begin

    if (mes <= 0 or mes > 12) then
    raise mes_invalido;
    end if;

    if (ano <= 0 or ano > extract(year from sysdate)) then
    raise ano_invalido;
    end if;

-- SELECIONA TODAS AS CAMAREIRAS (ID) E RESPETIVOS VALORES TOTAIS DE CONSUMO NUM CERTO ANO E M�S

    Insert into "User"
        Values(email,password);

    select id
    from "User" where "User".email = email;





    open curs for
        select lc.id_camareira, SUM(lc.quantidade*lc.preco_unitario)
        from linha_conta_consumo lc inner join camareira c on c.id = lc.id_camareira
                                    where EXTRACT(YEAR FROM lc.data_registo) = ano and EXTRACT(MONTH FROM lc.data_registo) = mes
                                    group by lc.id_camareira;

-- PERCORRE TODOS AS CAMAREIRAS E RESPETIVOS VALORES TOTAIS DE CONSUMO NUM CERTO ANO E M�S
-- E, SEGUIDAMENTE, ATRIBUI UM VALOR AO B�NUS DEPENDENDO DO VALOR DE CONSUMOS.
    loop
            fetch curs into id_cam, bonus_valor;
            exit when curs%notfound;
            if (bonus_valor > 1000) then
            bonus_valor := 0.15*bonus_valor;
            elsif(bonus_valor >= 500) then
            bonus_valor := 0.10*bonus_valor;
            elsif(bonus_valor > 100) then
            bonus_valor := 0.05*bonus_valor;
            else
            bonus_valor := 0;
            end if;

            update camareira
                set bonus = bonus_valor
                where id_cam = camareira.id;
    end loop;

    close curs;

    EXCEPTION
    when mes_invalido then
    raise_application_error(-20025, 'M�s Inv�lido!');
    when ano_invalido then
    raise_application_error(-20026, 'Ano Inv�lido!');

end;