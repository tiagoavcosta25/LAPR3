@startuml
skinparam classAttributeIconSize 0


package "Controller" #DDDDDD {
class ApplicationPOT
{
  +static getInstance()
  +getCurrentSession(session)
}
}

package "Data" #DDDDDD {

class DeliveryRunDB {
+DeliveryRunDB()
+addNewDeliveryRun(deliveryRun)
+getMostChargedScooter(vehicleModel)
+getMostChargedDrone(vehicleModel)
}

class PharmacyDB {
+PharmacyDB()
+getSuitableCourier()
}

class VehicleDB {
+VehicleDB()
+calculateBestVehicleAndBestPath(lstOrder)
}


class DataHandler{
+openConnection()
+closeAll()
}

}

package "UI" #DDDDDD {
class RegisterDeliveryRunUI{

}



}


package "Controller" #DDDDDD {
class RegisterDeliveryRunController{
+registerDeliveryRun(lstOrder)
}
}


package "Model" #DDDDDD {


class Courier{
+Courier(id,name,email,pw,nif,iban,pharmacy)
}

class DeliveryRun{
-Integer m_intId
-Courier m_oCourier
-Vehicle m_oVehicle
-List<Order> m_lstOrder
-DeliveryStatus m_oStatus
+DeliveryRun(courier,lstOrder,vehicle)
}

}

package "Model" #DDDDDD {
class UserSession{
-String email
+getRole()
}

package "Service" #DDDDDD {


class DeliveryRunService {
+DeliveryRunService()
+newDeliveryRun(courier,lstOrder)
+addNewDeliveryRun(deliveryRun)
+getMostChargedScooter(vehicleModel)
+getMostChargedDrone(vehicleModel)
+getMostEfficientVehicleModel(lstPair)
}

class PharmacyService {
+PharmacyService()
+getSuitableCourier()
}

class GraphService {
+GraphService()
+calculateBestVehicleAndBestPath(lstOrder)
}


}

enum DeliveryStatus{
+DeliveryStatus()
}
}






RegisterDeliveryRunUI ..> RegisterDeliveryRunController
RegisterDeliveryRunController ..> DeliveryRunService
RegisterDeliveryRunController ..> GraphService
RegisterDeliveryRunController ..> ApplicationPOT
RegisterDeliveryRunController ..> PharmacyService
PharmacyService "1" --> "1" PharmacyDB : has >
DeliveryRunService "1" --> "1" DeliveryRunDB : has >
GraphService "1" --> "1" VehicleDB : has >
DeliveryRun "1" --> "1" Courier : has >
DeliveryRun "1" --> "1" DeliveryStatus : has

DeliveryRunService "1" --> "*" DeliveryRun : creates

class DeliveryRunDB extends DataHandler
class PharmacyDB extends DataHandler
class VehicleDB extends DataHandler
ApplicationPOT "1" -> "1" UserSession : has

@enduml