@startuml
autonumber
actor "Administrator" as ADMIN

participant ":RegisterCourierUI" as UI
participant ":RegisterCourierController" as CTRL
participant "PotApplication" as PA
participant "app \n:PotApplication" as APA
participant "session \n:UserSession" as US
participant "courReg \n:PharmacyService" as PR
participant "courServ \n:CourierService" as RF
participant "pass \n:PassGenerator" as PS
participant "courier: Courier" as CR
participant ":PharmacyDB" as PDB
participant ":CourierDB" as CDB

activate ADMIN

ADMIN -> UI : initializes the register of a new Courier
activate UI
UI -> ADMIN : asks for the data that features the Courier \n(i.e., name, e-mail, NIF and bank account (IBAN) and pharmacyID)
deactivate UI

ADMIN -> UI : inserts the required data
activate UI
UI -> CTRL : newCourier(name,email, nif, iban, pharmacyID)
activate CTRL
CTRL -> PR : create()
activate PR
PR -> PDB** : create()
deactivate PR
CTRL -> RF : create()
activate RF
RF -> CDB** : create()
deactivate RF

CTRL -> CTRL : validateInput(name,email, nif, iban, pharmacyID)
CTRL -> PA : app = getInstance()
activate PA
deactivate PA
deactivate US
CTRL -> PR : pharmacy = getPharmacyByID(pharmacyID)
activate PR
PR -> PDB : pharmacy = getPharmacyByID(pharmacyID)
activate PDB

deactivate PR
deactivate PDB
CTRL -> RF : newCourier(name, nif, email, iban, pharmacy)
activate RF
RF -> PS : create()
activate PS
deactivate PS
RF -> PS : password = generatePassword()
activate PS
deactivate PS
RF -> CR ** : create(name, email, password, nif, iban, pharmacy)
deactivate RF
deactivate CTRL


UI -> ADMIN : validates, presents the data and asks for a confirmation
deactivate UI

ADMIN -> UI : confirms
activate UI
UI -> CTRL : registersCourier()
activate CTRL
CTRL -> RF : registersCourier(courier)
activate RF
RF -> CDB : registersCourier(courier)
activate CDB
deactivate CDB
ref over CDB : SD_CONNECTIONS
UI -> ADMIN : informs the success of the operation
deactivate RF
deactivate CTRL
deactivate UI

deactivate ADMIN

@enduml
