@startuml
skinparam classAttributeIconSize 0

package "UI" #DDDDDD {
class NotifyAndRemoveUI{
}
}


package "Controller" #DDDDDD {


class NotifyAndRemoveController{
+notifyAndRemove(order)
}

}

database Database{
}


package "Model" #DDDDDD {
package "Service" #DDDDDD {

  class OrderService{
       +notifyAndRemove(order)
  }
 }
}

package "Model" #DDDDDD {
class User{
-   int id
-   String name
-   String email
-   String password
-   Integer nif
}

class Client{
-   int IBAN
-   long creditCardNumber
-   int validityDate
-   int CCV
}

class Address{
-   int id
-   String streetName
-   String doorNumber
-   String postalCode
-   String locality
-   String country
-   float longitude
-   float latitude
}

class Order{
-   int id
-   float amount
-   float totalWeight
-   float additionalFee
-   Date orderDate
-   String description
-   String status
-   boolean isHomeDelivery
}

class Product{
-   int id
-   String name
-   String description
-   float unitaryPrice
-   float unitaryWeight
}

class Pharmacy{
-   int id
-   String name
-   String email
}

}


package "Data" #DDDDDD {
class DataHandler{
    +openConnection()
    +closeAll()
}


class OrderDB{
       +OrderDB()
       +registerOrder(order)
  }


}

class OrderDB extends DataHandler

NotifyAndRemoveUI ..> NotifyAndRemoveController
NotifyAndRemoveController ..> OrderService
Database "1" -- "*" Client : has registered >
Database "1" -- "*" Order : has registered >
Database "1" -- "*" Product : has registered >
Database "1" -- "*" Address : has registered >
OrderDB -- Database : manages >
OrderService "1" --> "*" Order : manages services of
OrderService "1" --> "1" OrderDB : uses

Order "1" -- "*" Product : has >
Order "1" -- "1" Pharmacy : has >
Client "1" -- "1" Order : makes >
Client "1" -- "1" Address : has >
Client "1" -- "1" User : acts as >

@enduml