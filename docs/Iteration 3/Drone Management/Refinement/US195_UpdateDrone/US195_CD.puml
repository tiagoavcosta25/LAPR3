@startuml
skinparam classAttributeIconSize 0

database Database {
}

package "UI" #DDDDDD {
class UpdateDroneUI{
}
}

package "Controller" #DDDDDD {
class UpdateDroneController{
+showPharmacies()
+showDronesList(pharmacyId)
+updateDrone(drone)
}
}


package "Model" #DDDDDD {
 package "Service" #DDDDDD {
  class PharmacyService{
      +PharmacyService()
      +getPharmacies()
  }

  class DroneService{
      +DroneService()
      +getDronesList(pharmacyId)
      +updateDrone(designation, potency, weight, maxPayload,\nbatteryCapacity, batteryVoltage, efficiency)
   }
}

package "Model" #DDDDDD {
class Park{
-   int maxSlotsNumber
}

class ChargingSlot{
-   int id
-   float outputPower
}

class ParkingSlot{
-   int id
}

class Drone{
+Drone(batteryPerc, charginStatus, potency,\n weight, batteryCapacity, maxPayload, batteryVoltage, pharmacyId)

}

class Vehicle{
  -int id
  -String vehicleType
  -float potency
  -float weight
  -float maxPayload
  -String charngingStatus
}

class Battery{
  -int id
  -float batteryPerc
  -int batteryCapacity
  -float batteryVoltage
}

class Address{
  -double longitude
  -double latitude
  -String doorNumber
  -String streetName
  -String postalCode
  -String locality
  -String country
}

class Pharmacy {
  -int id
  -String name
-   String email
  +getScootersList()
}
}


package "Data" #DDDDDD {
class DataHandler{
    +openConnection()
    +closeAll()
}
class PharmacyDB{
     +PharmacyDB()
     +getPharmacies()
 }

 class DroneDB{
     +DroneDB()
     +getDronesList()
     +updateDroneFromDB(designation, potency, weight, maxPayload,\nbatteryCapacity, batteryVoltage, efficiency)
  }
}

class PharmacyDB extends DataHandler
class DroneDB extends DataHandler

UpdateDroneUI ..> UpdateDroneController
UpdateDroneController ..> PharmacyService
UpdateDroneController ..> DroneService
Database "1" --> "1" PharmacyDB : manages
Database "1" --> "1" DroneDB : manages
DroneService "1" --> "*" PharmacyDB : uses
PharmacyService "1" --> "*" DroneDB : uses
PharmacyService "1" --> "*" Pharmacy : manage services of
DroneService "1" --> "*" Drone : manage services of

Database "1" -- "*" Pharmacy : has registered >
Database "1" -- "*" Drone : has registered >

Vehicle "1" -- "1" Battery : has >
Vehicle "*" -- "1" Pharmacy : belongs to a >
Drone "*" -- "1" Vehicle : is a type of >
Pharmacy "1" -- "1" Address : has >
Pharmacy "1" -- "1" Park : has >
Park "1" -- "1" ChargingSlot : has >
Park "1" -- "1" ParkingSlot : has >

@enduml