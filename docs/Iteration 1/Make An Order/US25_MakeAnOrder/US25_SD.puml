@startuml
autonumber
hide footbox

actor "Client" as CL

participant "MakeAnOrderUI" as UI
participant "MakeAnOrderController" as CTRL
participant "PotApplication" as _APP
participant "app\n:PotApplication" as APP
participant "session\n:UserSession" as SESSION
participant "plat\n:Platform" as PLAT
participant "clientReg\n:ClientRegistration" as CR
participant "clientDB\n:ClientDB" as CDB
participant "prodReg\n:ProductRegistration" as PR
participant "prodDB\n:ProductDB" as PDB
participant "prodReg\n:OrderRegistration" as OR
participant "orderDB\n:OrdersDB" as ODB
participant "DataHandler" as DH
participant "order\n:Order" as O

activate CL

CL -> UI : sends a request to make an order
activate UI
UI -> CTRL : getAvailableProducts()
activate CTRL
CTRL -> _APP: app = getInstance()
activate _APP
deactivate _APP

CTRL -> APP: plat = getPlaform()
activate APP
deactivate APP

CTRL -> APP: session = getCurrentSession()
activate APP
deactivate APP

CTRL -> SESSION: email = getUserEmail()
activate SESSION
deactivate SESSION
CTRL -> PLAT : clienteReg = getClient()
activate PLAT
deactivate PLAT
CTRL -> CR : client = getUserByEmail()
activate CR
CR -> CDB : client = getUserByEmail()
activate CDB
CDB -> DH : getConnection()
activate DH
DH -> DH : openConnection()
deactivate DH
deactivate CDB
deactivate CR

CTRL -> PLAT : prodReg = getProductReg()
activate PLAT
deactivate PLAT
CTRL -> PR : lstProd = getAvailableProducts()
activate PR
PR -> PDB : lstProd = getAvailableProducts()
activate PDB
PDB -> DH : getConnection()
activate DH
DH -> DH : openConnection()
deactivate DH
deactivate PDB
deactivate PR
deactivate CTRL

UI -> CL : shows the list of the available products
deactivate UI
CL -> UI : chooses which products and which quantities to order
activate UI
UI -> CTRL : newOrder(address, amount, additionalFee, dateOrder, description, mapProducts)
activate CTRL
CTRL -> PLAT : ordReg = getOrderReg()
activate PLAT
deactivate PLAT
CTRL -> OR : order = addOrder(address, amount, additionalFee, dateOrder, description, mapProducts, client)
activate OR
OR -> O** : create(address, amount, additionalFee, dateOrder, description, mapProducts, client)
OR -> OR : validateOrder(order)
deactivate OR
deactivate CTRL
UI -> CL : validates, presents the order and asks for a confirmation
deactivate UI

CL -> UI : confirms
activate UI
UI -> CTRL : registerOrder()
activate CTRL
CTRL -> OR : registerOrder(order)
activate OR
OR -> ODB : addOrder(order)
ODB -> ODB : addOrder(order)
activate ODB
ODB -> DH : getConnection()
activate DH
DH -> DH : openConnection()
deactivate DH
deactivate ODB
deactivate OR
deactivate CTRL
UI -> CL : registers the order and informs of the success of the operation
deactivate UI
deactivate CL

@enduml