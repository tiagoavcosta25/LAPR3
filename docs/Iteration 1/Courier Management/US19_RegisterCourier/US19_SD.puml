@startuml
autonumber
actor "PharmacyManager" as ADMIN

participant ":RegisterCourierUI" as UI
participant ":RegisterCourierController" as CTRL
participant "PotApplication" as PA
participant "app \n:PotApplication" as APA
participant "session \n:UserSession" as US
participant "plat \n:Platform" as PLAT
participant "courReg \n:CourierRegistration" as RF
participant "pass \n:PassGenerator" as PS
participant "courier: Courier" as CR



activate ADMIN

ADMIN -> UI : initializes the register of a new Courier
activate UI
UI -> ADMIN : asks for the data that features the Courier (i.e., name, e-mail, NIF and bank account (IBAN))
deactivate UI

ADMIN -> UI : inserts the required data
activate UI
UI -> CTRL : newCourier(name,email, nif, iban)
activate CTRL
CTRL -> CTRL : validateInput(name,email, nif, iban)
CTRL -> PA : app = getInstance()
activate PA
deactivate PA
CTRL -> APA : plat = getPlatform()
activate APA
deactivate APA
CTRL -> APA : session = getCurrentSession()
activate APA
deactivate APA
CTRL -> US : email = getM_currentUserEmail()
activate US
deactivate US
CTRL -> PLAT : courReg = getCourReg()
activate PLAT
deactivate PLAT
CTRL -> RF : pharmacy = getPharmacyByManagerEmail(email)
activate RF
deactivate RF
CTRL -> RF : newCourier(name, nif, email, iban, pharmacy)
activate RF
RF -> PS : create()
activate PS
deactivate PS
RF -> PS : password = generatePassword()
activate PS
deactivate PS
RF -> CR ** : create(name, email, password, nif, iban, pharmacy)
deactivate RF
deactivate CTRL


UI -> ADMIN : validates, presents the data and asks for a confirmation
deactivate UI

ADMIN -> UI : confirms
activate UI
UI -> CTRL : registersCourier()
activate CTRL
CTRL -> RF : registersCourier(courier)
activate RF
RF -> RF : registersCourier(courier)
UI -> ADMIN : informs the success of the operation
deactivate RF
deactivate CTRL
deactivate UI

deactivate ADMIN

@enduml
