@startuml
autonumber
hide footbox

actor "Courier" as COUR

participant "KnowDeliveryUI" as UI
participant "KnowDeliveryController" as CTRL
participant "PotApplication" as _APP
participant "app\n:PotApplication" as APP
participant "session\n:UserSession" as SESSION
participant "plat\n:Platform" as PLAT
participant "courReg\n:CourierRegistration" as COURREG
participant "ordReg\n:OrdersRegistration" as ORDREG
participant "Database" as DB
participant "cour\n:Courier" as C
participant "order\n:Order" as O

activate COUR

COUR -> UI : Sends a request regarding what delivery will be done
activate UI
UI -> CTRL : getCourierInfo()
activate CTRL
CTRL -> _APP: app = getInstance()
activate _APP
deactivate _APP

CTRL -> APP: plat = getPlaform()
activate APP
deactivate APP

CTRL -> APP: session = getCurrentSession()
activate APP
deactivate APP

CTRL -> SESSION: email = getUserEmail()
activate SESSION
deactivate SESSION
CTRL -> PLAT : courReg = getCourReg()
activate PLAT
deactivate PLAT
CTRL -> COURREG : cour = getCourByEmail(email)
activate COURREG
COURREG -> DB : executeQuery(query)
activate DB
DB -> DB : openConnection()
DB -> DB : closeAll()
deactivate DB
deactivate COURREG
deactivate CTRL
UI -> COUR : Shows the information about the courier, requesting verification
deactivate UI
COUR -> UI : Verifies the information
activate UI
UI -> CTRL : getOrderByCour()
activate CTRL
CTRL -> PLAT : ordReg = getOrdReg()
activate PLAT
deactivate PLAT
CTRL -> ORDREG : order = getOrderByCourier(cour)
activate ORDREG
ORDREG -> DB : executeQuery(query)
activate DB
DB -> DB : openConnection()
DB -> DB : closeAll()
deactivate DB
deactivate ORDREG
deactivate CTRL
opt [ order == null]
UI -> COUR : Informs that doesn't exist any order
end opt
UI -> COUR : Returns the order, informing of the success of the operation
deactivate UI
deactivate COUR

@enduml