@startuml
skinparam classAttributeIconSize 0

package "UI" #DDDDDD {
class RegisterScooterUI{

}
}


package "Controller" #DDDDDD {
class RegisterScooterController{
+newScooter(maxWeight, battery,\n batteryCapacity, status, potency, pharmacyId)
+registersScooter()
}

class ApplicationPOT
{
  +static getInstance()
  +getPlatform()
}

class UserSession
{
  +getCurrentSession()
}
}


package "Model" #DDDDDD {
class Platform {
  -String designation
  +gePharmReg()
  +getScootReg()
}
package "Registration" #DDDDDD {
 class PharmacyRegistration{
     +getPharmacyById(pharmacyId)
     +getConnection()
 }

 class ScooterRegistration{
      +newScooter(maxWeight, battery,\n batteryCapacity, status, potency, pharmacyId)
      +create(maxWeight, battery,\n batteryCapacity, status, potency, pharmacyId)
      +validateScooter(scoot)
  }
 }
}

package "Model" #DDDDDD {
class Scooter{
  -int id
  -String battery
  -float battery_capacity
  -String status
  -float potency
  -float maxWeight
}

class Address{
-String streetName
-String doorNumber
-String locality
-String country
-float longitude
-float latitude
}

class Pharmacy {
  -int id
  -String name
  -int parkingSlots
  -int chargingSlots
}

}


package "Data" #DDDDDD {
class DataHandler{
    +openConnection()
    +closeAll()
}
}

class PharmacyRegistration extends DataHandler
class ScooterRegistration extends DataHandler

RegisterScooterUI ..> RegisterScooterController
RegisterScooterController ..> Platform
RegisterScooterController ..> ApplicationPOT
RegisterScooterController ..> UserSession
Platform "1" --> "1" PharmacyRegistration : has
ScooterRegistration "1" --> "*" Scooter : manages

Platform "1" -- "*" Pharmacy : has registered >
Platform "1" -- "*" Scooter : has registered >

Pharmacy "1" -- "*" Scooter : has >
Pharmacy "1" -- "1" Address : has >

@enduml