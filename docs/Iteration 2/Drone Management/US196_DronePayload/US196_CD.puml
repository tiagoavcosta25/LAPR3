@startuml
skinparam classAttributeIconSize 0

database Database {
}

package "UI" #DDDDDD {
class DronePayloadUI{
}
}

package "Controller" #DDDDDD {
class DronePayloadController{
+getDronePayload(droneId)
}
}


package "Model" #DDDDDD {
 package "Service" #DDDDDD {

  class DroneService{
      +DroneService()
      +getDronePayload(droneId)
   }
}

package "Model" #DDDDDD {

class Drone{
  +Drone(batteryPerc, charginStatus, potency,\n weight, batteryCapacity, maxPayload, batteryVoltage, pharmacyId)
}

class Vehicle{
  -int id
  -String vehicleType
  -float potency
  -float weight
  -float maxPayload
  -String charngingStatus
}

}


package "Data" #DDDDDD {
class DataHandler{
    +openConnection()
    +closeAll()
}
class DroneDB{
     +DroneDB()
     +getDronePayload(droneId)
 }
}

class DroneDB extends DataHandler

DronePayloadUI ..> DronePayloadController
DronePayloadController ..> DroneService
Database "1" --> "1" DroneDB : manages
DroneService "1" --> "*" DroneDB : uses
DroneService "1" --> "*" Drone : manage services of

Database "1" -- "*" Drone : has registered >

Drone "*" -- "1" Vehicle : is a type of >

@enduml