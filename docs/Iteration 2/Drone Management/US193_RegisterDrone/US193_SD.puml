@startuml
autonumber
actor "Pharmacy Manager" as PHARMAN

participant ":RegisterDroneUI" as UI
participant ":RegisterDroneController" as CTRL
participant "PotApplication" as PA
participant "app \n:PotApplication" as APA
participant "session \n:UserSession" as US
participant "plat \n:Platform" as PLAT
participant "pharmReg \n:PharmacyRegistration" as PH
participant "droneReg \n:DroneRegistration" as RD
participant "DroneDB" as DDB
participant "PharmacyDB" as PDB
participant "drone: Drone" as D



activate PHARMAN

PHARMAN -> UI : initializes the register of a new drone
activate UI
UI -> PHARMAN : asks for the data that features the drone (i.e., battery percentage, \nbattery capacity, maximum weight, potency, maximum payload, \nbattery voltage, status, pharmacy id)
deactivate UI

PHARMAN -> UI : inserts the required data
activate UI
UI -> CTRL : newDrone(batteryPerc, chargingStatus,\n potency, weight, batteryCapacity, maxPayload, batteryVoltage, pharmacy)
activate CTRL
CTRL -> PA : app = getInstance()
activate PA
deactivate PA
CTRL -> APA : plat = getPlatform()
activate APA
deactivate APA
CTRL -> APA : session = getCurrentSession()
activate APA
deactivate APA
CTRL -> US : email = getUserEmail()
activate US
deactivate US
CTRL -> PLAT : pharmReg = getPharmReg()
activate PLAT
deactivate PLAT
CTRL -> PH : pharmacy = getPharmacyByManager(email)
activate PH
PH -> PDB : getPharmacyByManager(email)
activate PDB
ref over PDB
SD_Connections
end ref
deactivate PH
deactivate PDB
CTRL -> PLAT : droneReg = getDroneReg()
activate PLAT
deactivate PLAT
CTRL -> RD : newDrone(batteryPerc, chargingStatus, potency, weight, batteryCapacity, maxPayload, batteryVoltage, pharmacy)
activate RD
RD -> D ** : create(batteryPerc, chargingStatus,\n potency, weight, batteryCapacity,\n maxPayload, batteryVoltage, pharmacy)
deactivate DDB
deactivate CTRL
deactivate RD


UI -> PHARMAN : validates, presents the data and asks for a confirmation
deactivate UI

PHARMAN -> UI : confirms
activate UI
UI -> CTRL : registersDrone()
activate CTRL
CTRL -> RD : registersDrone(drone)
activate RD
RD -> DDB : registersDrone(drone)
activate DDB
ref over DDB
SD_Connections
end ref
deactivate DDB
deactivate RD
deactivate CTRL
UI -> PHARMAN : informs the success of the operation
deactivate UI

deactivate PHARMAN

@enduml
