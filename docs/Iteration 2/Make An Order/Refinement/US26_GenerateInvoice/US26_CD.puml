@startuml
skinparam classAttributeIconSize 0

package "UI" #DDDDDD {
class GenerateInvoiceUI{

}
}


package "Controller" #DDDDDD {
class GenerateInvoiceController{
+registerNewUser(name,email,password,address,gpsLocation,creditCardNr,validityDate,CCV)
}

class ApplicationPOT
{
  +static getInstance()
  +getPlatform()
}

class UserSession
{
  +getCurrentSession()
}
}


package "Model" #DDDDDD {
class Platform {
  -String designation
  +getClientReg()
  +getProductReg()
  +getOrderReg()
}
package "Registration" #DDDDDD {
 class ClientRegistration{
     +getUserByEmail(email)
 }

  class OrderRegistration{
       +getLatestOrder()
   }

   class InvoiceRegistration{
          +addInvoice(date, totalPrice, order, client)
          +validateInvoice()
          +registerInvoice()
      }
 }
}

package "Model" #DDDDDD {
abstract class User{
-String email
-String password
-String name
}

class Client{
-int IBAN;
-long creditCardNumber
-Address address
-int validityDate
-int CCV
}

class Address{
-   String streetName
-   String doorNumber
-   String postalCode
-   String locality
-   String country
-   float longitude
-   float latitude
}

class Order{
-   int id
-   float amount
-   float totalWeight
-   float additionalFee
-   Date orderDate
-   String description
-   String status
+create(date, totalPrice, order, client)
}

class Product{
-   int id
-   String name
-   String description
-   float unitaryPrice
-   float unitaryWeight
}

class Invoice{
-   Date orderDate
-   float amount
}

class CreditCard{
-   int creditCardNumber
-   Date validatyDate
-   int CCV
}

}


package "Data" #DDDDDD {
class DataHandler{
    +openConnection()
    +closeAll()
}
}

class ClientRegistration extends DataHandler
class InvoiceRegistration extends DataHandler
class OrderRegistration extends DataHandler

class Client extends User

GenerateInvoiceUI ..> GenerateInvoiceController
GenerateInvoiceController ..> Platform
GenerateInvoiceController ..> ApplicationPOT
GenerateInvoiceController ..> UserSession
Platform "1" --> "1" ClientRegistration : has
Platform "1" --> "1" OrderRegistration : has
Platform "1" --> "1" InvoiceRegistration : has
ClientRegistration "1" --> "*" Client : manages
InvoiceRegistration "1" --> "*" Invoice : manages
OrderRegistration "1" --> "*" Order : manages

Platform "1" -- "*" Client : has registered >
Platform "1" -- "*" Order : has registered >
Order "1" -- "*" Product : has >
Client "1" -- "1" Order : makes >
Client "1" -- "1" Address : has >
Order "1" -- "1" Address : has >
Invoice "1" -- "1" Order : has >
Invoice "1" -- "*" Product : has >
Invoice "1" -- "*" CreditCard : is payed using >

@enduml