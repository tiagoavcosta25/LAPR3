@startuml
autonumber
hide footbox

actor "Manager" as U

participant "RegisterDeliveryRunUI" as UI
participant "RegisterDeliveryRunController" as CTRL
participant "ApplicationPOT" as _APP
participant "app\n:ApplicationPOT" as APP
participant "session\n:UserSession" as SESSION

participant "PharmacyService" as PS
participant "OrderService" as OS
participant "DeliveryRunService" as DRS
participant "PharmacyDB" as PDB
participant "OrderDB" as ODB
participant "DeliveryRunDB" as DB
participant "delivery\n:Delivery" as D
participant "deliveryRun\n:DeliveryRun" as DR
participant "status\n:DeliveryStatus" as DS


participant "DataHandler" as DH

activate U

U -> UI : Initiates the registration of a delivery run
activate UI

UI -> CTRL : lstOrders = getOrders()
activate CTRL
CTRL -> _APP: app = getInstance()
activate _APP
deactivate _APP

CTRL -> APP : session = getCurrentSession()
activate APP
deactivate APP

CTRL -> SESSION: email = getCurrentUserEmail()
activate SESSION
deactivate SESSION


CTRL -> PS : getPharmacyByManagerEmail(email)
activate PS
PS -> PDB : getPharmacyByManagerEmail(email)
activate PDB
deactivate PDB
deactivate PS

ref over PDB
SD_CONNECTIONS
end ref


CTRL -> OS : getOrdersFromPharmacy(pharmacy)
activate OS
OS -> ODB : lstOrders = getOrdersFromPharmacy(pharmacy)
activate ODB
deactivate OS


ref over ODB
SD_CONNECTIONS
end ref
deactivate ODB
deactivate CTRL


loop until there are no more valid orders to choose\nfrom
UI --> U: Shows the list of orders

deactivate UI




U -> UI : Chooses an order
activate UI
UI -> CTRL : addNewDelivery(order)
activate CTRL
CTRL -> DRS : newDelivery(order)
activate DRS
DRS -> DB : newDelivery(order)
deactivate DRS
activate DB
DB -> D** : create(order)
deactivate DB

UI --> U : Checks if the manager wants to choose\nanother order
deactivate CTRL
deactivate UI
end


U -> UI : Confirms that there are no more orders\nthat he wants to add

activate UI

UI -> CTRL : newDeliveryRun()

activate CTRL

CTRL -> DRS : courier = getSuitableCourier()
activate DRS
DRS -> DB : getSuitableCourier()
activate DB
deactivate DB
deactivate DRS

ref over DB
SD_CONNECTIONS
end ref

CTRL -> DRS : lstDelivery = calculateShortestPath()
activate DRS
deactivate DRS
CTRL -> DRS : deliveryRun = newDeliveryRun(courier,lstDelivery)
activate DRS
DRS -> DR** : create(courier,lstDelivery)
activate DR
DR -> DS** : create()
deactivate DRS



deactivate DR

CTRL -> DRS : addNewDeliveryRun(deliveryRun)
activate DRS
DRS -> DB : addNewDeliveryRun(deliveryRun)
activate DB
deactivate DRS
ref over DB
SD_CONNECTIONS
end ref
deactivate DB

CTRL -> DRS : addDelivery(lstDelivery)
activate DRS
DRS -> DB : addDelivery(lstDelivery)

activate DB
ref over DB
SD_CONNECTIONS
end ref
deactivate DB
deactivate DRS

deactivate CTRL

UI --> U : Registers the delivery run and informs\nabout the success of the operation
deactivate UI



deactivate U


@enduml