@startuml
skinparam classAttributeIconSize 0

database Database {
}

package "UI" #DDDDDD {
class UpdateScooterUI{
}
}

package "Controller" #DDDDDD {
class UpdateScooterController{
+showPharmacies()
+showScootersList(pharmacyId)
+updateScooter(scoot)
}
}


package "Model" #DDDDDD {
 package "Service" #DDDDDD {
  class PharmacyService{
      +PharmacyService()
      +getPharmacies()
  }

  class ScooterService{
      +ScooterService()
      +getScootersList(pharmacyId)
      +updateScooter(scoot)
   }
}

package "Model" #DDDDDD {
class Scooter{
  -int id
  -float batteryPerc
  -String charginStatus
  -float potency
  -float weight
  -int batteryCapacity
  -float maxPayload
  -float batteryVoltage
  +Scooter(batteryPerc, charginStatus, potency,\n weight, batteryCapacity, maxPayload, batteryVoltage, pharmacy)
}

class Address{
  -float longitude
  -float latitude
  -String doorNumber
  -String streetName
  -String postalCode
  -String locality
  -String country
}

class Pharmacy {
  -int id
  -String name
  +getScootersList()
}
}


package "Data" #DDDDDD {
class DataHandler{
    +openConnection()
    +closeAll()
}
class PharmacyDB{
     +PharmacyDB()
     +getPharmacies()
 }

 class ScooterDB{
     +ScooterDB()
     +getScootersList()
     +updateScooterFromDB(scoot)
  }
}

class PharmacyDB extends DataHandler
class ScooterDB extends DataHandler

UpdateScooterUI ..> UpdateScooterController
UpdateScooterController ..> PharmacyService
UpdateScooterController ..> ScooterService
Database "1" --> "1" PharmacyDB : manages
Database "1" --> "1" ScooterDB : manages
ScooterService "1" --> "*" PharmacyDB : uses
PharmacyService "1" --> "*" ScooterDB : uses
PharmacyService "1" --> "*" Pharmacy : manage services of
ScooterService "1" --> "*" Scooter : manage services of

Database "1" -- "*" Pharmacy : has registered >
Database "1" -- "*" Scooter : has registered >

Scooter "*" -- "1" Pharmacy : belongs to >
Pharmacy "1" -- "1" Address : has >

@enduml